---
name: Publish Release

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: "0 2 * * *"

permissions:
  contents: read

jobs:
  init:
    name: Initialize build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Get tag
        id: tag
        # yamllint disable rule:line-length
        run: |
          if [[ "$GITHUB_EVENT_NAME" = "release" ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          else
            TAG=$(cat webserver/const.py | sed -n -E "s/^__version__\s+=\s+\"(.+)\"$/\1/p")
            today="$(date --utc '+%Y%m%d')"
            TAG="${TAG}${today}"
            BRANCH=${GITHUB_REF#refs/heads/}
            if [[ "$BRANCH" != "devel" ]]; then
              TAG="${TAG}-${BRANCH}"
            fi
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
        # yamllint enable rule:line-length

  deploy-pypi:
    name: Build and publish to PyPi
    if: github.repository == 'tomyone/webserver' && github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Set up python environment
        run: |
          python3 -m pip install --upgrade pip
          python3 -m venv venv
          source venv/bin/activate
          pip3 install -r requirements.txt
          pip3 install setuptools wheel
          pip3 install --no-use-pep517 -e .
          pip3 install twine
      - name: Build Package
        run: |
          source venv/bin/activate
          python3 setup.py sdist bdist_wheel
      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.GITEA_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.GITEA_TOKEN }}
          TWINE_REPOSITORY_URL: ${{ secrets.GITEA_REPO_URL }}
        run: |
          source venv/bin/activate
          twine upload dist/*
